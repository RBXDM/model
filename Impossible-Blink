local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local function safeGetObjects(id)
    local success, result = pcall(function()
        return game:GetObjects("rbxassetid://"..id)
    end)
    if not success then
        warn("资源加载失败:", result)
        return nil
    end
    return result
end

ReplicatedStorage.GameData.LatestRoom.Changed:Wait()
local LatestRoom = ReplicatedStorage.GameData.LatestRoom.Value
local Rooms = Workspace.CurrentRooms:FindFirstChild(tostring(LatestRoom))
local OGNodes = Rooms and Rooms:FindFirstChild("PathfindNodes")

if OGNodes then
    local NewNodes = OGNodes:Clone()
    NewNodes.Parent = Rooms
    NewNodes.Name = "Nodes"
end

local currentLoadedRoom = Workspace.CurrentRooms[LatestRoom]
local eyesAssets = safeGetObjects("108058013422462")
if not eyesAssets or #eyesAssets == 0 then return end
local eyes = eyesAssets[1]

local num = math.floor(#currentLoadedRoom.Nodes:GetChildren() / 2)
eyes.CFrame = (num == 0 and currentLoadedRoom.Base or currentLoadedRoom.Nodes[num]).CFrame + Vector3.new(0, 3, 0)
eyes.Parent = Workspace

local Close = eyes.Attachment.Close
local Open = eyes.Attachment.Open
local Change = eyes.Change

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hum = character:WaitForChild("Humanoid")
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local lastPosition = humanoidRootPart.Position
local lastDamageTime = 0
local isCounting = false
local damageAmount = 10

local function onHeartbeat()
    if Open and Open.Enabled then
        local currentTime = tick()
        local currentPosition = humanoidRootPart.Position
        local isMoving = (currentPosition - lastPosition).Magnitude > 0.1
        
        if isMoving then
            if not isCounting then
                hum.Health = hum.Health - damageAmount
                lastDamageTime = currentTime
                isCounting = true
            elseif currentTime - lastDamageTime >= 1 then
                hum.Health = hum.Health - damageAmount
                lastDamageTime = currentTime
            end
            
            if hum.Health <= 0 then
                ReplicatedStorage.GameStats["Player_"..player.Name].Total.DeathCause.Value = "Blink"
                firesignal(ReplicatedStorage.RemotesFolder.DeathHint.OnClientEvent, {
                    "You died to Blink",
                    "Don't move with his eyes open!",
                    "Try again"
                }, "Blue")
            end
        else
            isCounting = false
        end
        
        lastPosition = currentPosition
    end
end

local blinkConnection = RunService.Heartbeat:Connect(onHeartbeat)

coroutine.wrap(function()
    task.wait(2)
    while eyes and eyes.Parent do
        if Close and Change then
            Close.Enabled = true
            Open.Enabled = false
            Change:Play()
        end
        task.wait(7)

        if not (eyes and eyes.Parent) then break end
        if Open and Change then
            Close.Enabled = false
            Open.Enabled = true
            Change:Play()
        end
        task.wait(7)
    end
end)()

ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
    if eyes and eyes.Parent then
        eyes:Destroy()
    end
    if blinkConnection then
        blinkConnection:Disconnect()
    end
end)
